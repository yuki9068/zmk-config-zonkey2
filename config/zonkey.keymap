#include <physical_layouts.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define DFb 0
#define JIS 1
#define BT 4
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  INT1         // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp AT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp CARET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp AMPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moA: moA {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moB: moB {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moC: moC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp INT3>, <&kp JP_PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moD: moD {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moE: moE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moF: moF {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp KP_PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moG: moG {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moH: moH {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp TILDE2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moI: moI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_BSLH>, <&kp JP_UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LANGUAGE_1 Q  &kp W         &kp E         &kp R    &kp T                                           &kp Y                &kp U                  &kp I     &kp O     &kp P
&mt LANGUAGE_2 A  &kp S         &kp D         &kp F    &kp G        &kp LS(LG(S))    &kp LS(NUMBER_9)  &kp H                &kp J                  &kp K     &kp L     &mt SQT ENTER
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C    &kp V        &kp B            &kp LS(NUMBER_8)  &kp N                &kp M                  &mkp MB1  &mkp MB2  &kp INSERT
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp TAB  &lt 3 MINUS  &lt 2 SPACE                        &lt 3 LC(LA(SPACE))  &lt 1 INTERNATIONAL_4                                     &to 4
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp LANGUAGE_1  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &trans                              &kp RIGHT_BRACE    &kp PIPE        &trans            &trans     &kp BACKSPACE
&kp LANGUAGE_2  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &trans            &trans    &trans  &kp RIGHT_BRACKET  &kp BACKSLASH   &kp LEFT_BRACKET  &trans     &kp ENTER
&trans          &trans            &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &trans    &trans  &kp LS(COMMA)      &kp LS(PERIOD)  &kp QUESTION      &kp COMMA  &kp PERIOD
&trans          &trans            &trans            &trans            &trans            &trans            &trans             &trans                                                      &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp MINUS  &kp N7        &kp N8  &kp N9  &kp LS(SEMICOLON)                           &trans  &kp F9  &kp F10  &kp F11  &kp F12
&kp SLASH  &kp N4        &kp N5  &kp N6  &kp LS(SQT)        &kp LS(MINUS)    &trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8
&trans     &kp NUMBER_0  &kp N1  &kp N2  &kp N3             &kp DOT          &trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4
&trans     &trans        &trans  &trans  &trans             &trans                   &trans  &trans                             &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))  &kp UP_ARROW            &kp LC(TAB)      &trans                                     &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp HOME    &kp LEFT_ARROW   &kp DOWN_ARROW          &kp RIGHT_ARROW  &kp END                  &trans    &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans      &kp LEFT_SHIFT   &kp LG(LS(LEFT_ARROW))  &trans           &kp LG(LS(RIGHT_ARROW))  &trans    &trans  &trans  &trans          &trans          &trans           &trans
&trans      &trans           &trans                  &trans           &trans                   &trans            &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &trans  &kp F2             &kp LC(C)        &kp LC(V)    &kp LG(V)
&trans  &trans  &trans  &trans  &trans  &kp LG(H)    &trans  &trans  &mkp MB1           &mkp MB3         &mkp MB2     &kp INSERT
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &kp LG(Z)          &kp LC(LS(TAB))  &kp LC(TAB)  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans               &trans  &kp LC(LA(SPACE))                                            &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp LA(F4)  &kp F2               &kp LC(C)        &kp LC(V)    &kp LG(V)
&trans  &trans  &trans  &trans  &trans  &kp LG(H)    &trans  &trans      &mkp MB1             &mkp MB3         &mkp MB2     &kp INSERT
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans      &kp LG(Z)            &kp LC(LS(TAB))  &kp LC(TAB)  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans               &trans      &lt 0 LC(LA(SPACE))                                            &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
